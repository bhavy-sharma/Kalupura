"use client";
import React, { useState } from "react";
import axios from "axios";
import { motion } from "framer-motion";
import Header from "@/components/layout/Header";
import Footer from "@/components/layout/Footer";

function UserRegister() {
  const userData = localStorage.getItem("user") ? JSON.parse(localStorage.getItem("user")) : null;
  
  const [formData, setFormData] = useState({
    // Personal Info
    name: "",
    fatherName: "",
    motherName: "",
    grandfatherName: "",
    grandmotherName: "",
    dob: "",
    dobTime: "",
    age: "", // üëà Added age field
    gender: ""||"male",
    phoneNumber: "",

    // Education & Work
    qualification: "",
    occupation: "",

    // Marital & Social
    maritalStatus: "single",
    marriageDate: "",
    dharam: "",
    jaati: "",
    aadharNumber: "",
    panCardNumber: "",

    // Head of Family & Auth
    headOfFamilyName: "",
    email: "",
    password: "",
    role: "member",
    memberOfFamily: ["no"],
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      console.log(formData)
      console.log( "userData.email",userData.email, "formData.name",formData.name);
      const res = await axios.post("http://localhost:5000/api/v1/kalupra/cerateMember", formData);
      if (userData?.email) {
        await axios.patch("http://localhost:5000/api/v1/kalupra/updatemember", { 
          email: userData.email, 
          newMembers: [formData.name] 
        });
      }
      alert("User Registered Successfully");
    } catch (error) {
      console.error(error);
      alert("Failed to Register Users");
    }
  };

  return (
    <>
    <Header />
    <div className="min-h-screen bg-amber-50 p-4 flex justify-center items-start pt-8">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6 }}
        className="w-full max-w-3xl bg-white border-2 border-amber-800 rounded-xl shadow-md p-6"
      >
        <div className="text-center mb-6">
          <h2 className="text-2xl font-bold text-amber-900">‡§ó‡•ç‡§∞‡§æ‡§Æ‡•Ä‡§£ ‡§™‡§Ç‡§ú‡•Ä‡§ï‡§∞‡§£ ‡§´‡•â‡§∞‡•ç‡§Æ</h2>
          <p className="text-amber-700 mt-1">‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§≠‡§∞‡•á‡§Ç</p>
        </div>

        <form onSubmit={handleSubmit} className="space-y-5">
          {/* Personal Info */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <input
              type="text"
              name="name"
              placeholder="‡§®‡§æ‡§Æ"
              value={formData.name}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
              required
            />
            <input
              type="text"
              name="fatherName"
              placeholder="‡§™‡§ø‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ"
              value={formData.fatherName}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
            />
            <input
              type="text"
              name="motherName"
              placeholder="‡§Æ‡§æ‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ"
              value={formData.motherName}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
            />
            <input
              type="text"
              name="grandfatherName"
              placeholder="‡§¶‡§æ‡§¶‡§æ/‡§®‡§æ‡§®‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ"
              value={formData.grandfatherName}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
            />
            <input
              type="text"
              name="grandmotherName"
              placeholder="‡§¶‡§æ‡§¶‡•Ä/‡§®‡§æ‡§®‡•Ä ‡§ï‡§æ ‡§®‡§æ‡§Æ"
              value={formData.grandmotherName}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
            />
            <input
              type="date"
              name="dob"
              value={formData.dob}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
            />
            <input
              type="time"
              name="dobTime"
              value={formData.dobTime}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
            />
            {/* üëá Age Field Added Here */}
            <input
              type="number"
              name="age"
              placeholder="‡§Ü‡§Ø‡•Å (‡§µ‡§∞‡•ç‡§∑ ‡§Æ‡•á‡§Ç)"
              value={formData.age}
              onChange={handleChange}
              min="0"
              max="120"
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
               required
            />
          </div>

          {/* Education & Work */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <input
              type="text"
              name="qualification"
              placeholder="‡§∂‡•à‡§ï‡•ç‡§∑‡§£‡§ø‡§ï ‡§Ø‡•ã‡§ó‡•ç‡§Ø‡§§‡§æ"
              value={formData.qualification}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
            />
            <input
              type="text"
              name="occupation"
              placeholder="‡§µ‡•ç‡§Ø‡§µ‡§∏‡§æ‡§Ø"
              value={formData.occupation}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
            />
          </div>

          {/* Marital & Social */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label className="block text-amber-800 text-sm mb-1">‡§µ‡•à‡§µ‡§æ‡§π‡§ø‡§ï ‡§∏‡•ç‡§•‡§ø‡§§‡§ø</label>
              <select
                name="maritalStatus"
                value={formData.maritalStatus}
                onChange={handleChange}
                className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
              >
                <option value="single">‡§Ö‡§µ‡§ø‡§µ‡§æ‡§π‡§ø‡§§</option>
                <option value="married">‡§µ‡§ø‡§µ‡§æ‡§π‡§ø‡§§</option>
                <option value="divorced">‡§§‡§≤‡§æ‡§ï‡§∂‡•Å‡§¶‡§æ</option>
                <option value="widowed">‡§µ‡§ø‡§ß‡§µ‡§æ/‡§µ‡§ø‡§ß‡•Å‡§∞</option>
              </select>
            </div>

            {formData.maritalStatus === "married" && (
              <div>
                <label className="block text-amber-800 text-sm mb-1">‡§µ‡§ø‡§µ‡§æ‡§π ‡§§‡§ø‡§•‡§ø</label>
                <input
                  type="date"
                  name="marriageDate"
                  value={formData.marriageDate}
                  onChange={handleChange}
                  className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
                />
              </div>
            )}

            <div>
              <label className="block text-amber-800 text-sm mb-1">‡§ß‡§∞‡•ç‡§Æ</label>
              <select
                name="dharam"
                value={formData.dharam}
                onChange={handleChange}
                className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
              >
                <option value="">‡§ö‡•Å‡§®‡•á‡§Ç</option>
                <option value="‡§π‡§ø‡§Ç‡§¶‡•Ç">‡§π‡§ø‡§Ç‡§¶‡•Ç</option>
                <option value="‡§Æ‡•Å‡§∏‡•ç‡§≤‡§ø‡§Æ">‡§Æ‡•Å‡§∏‡•ç‡§≤‡§ø‡§Æ</option>
                <option value="‡§à‡§∏‡§æ‡§à">‡§à‡§∏‡§æ‡§à</option>
                <option value="‡§∏‡§ø‡§ñ">‡§∏‡§ø‡§ñ</option>
                <option value="‡§¨‡•å‡§¶‡•ç‡§ß">‡§¨‡•å‡§¶‡•ç‡§ß</option>
                <option value="‡§ú‡•à‡§®">‡§ú‡•à‡§®</option>
                <option value="‡§Ö‡§®‡•ç‡§Ø">‡§Ö‡§®‡•ç‡§Ø</option>
              </select>
            </div>

            <div>
              <label className="block text-amber-800 text-sm mb-1">‡§ú‡§æ‡§§‡§ø</label>
              <select
                name="jaati"
                value={formData.jaati}
                onChange={handleChange}
                className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
              >
                <option value="">‡§ö‡•Å‡§®‡•á‡§Ç</option>
                <option value="general">‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø</option>
                <option value="obc">‡§ì‡§¨‡•Ä‡§∏‡•Ä</option>
                <option value="sc">‡§Ö‡§®‡•Å‡§∏‡•Ç‡§ö‡§ø‡§§ ‡§ú‡§æ‡§§‡§ø (SC)</option>
                <option value="st">‡§Ö‡§®‡•Å‡§∏‡•Ç‡§ö‡§ø‡§§ ‡§ú‡§®‡§ú‡§æ‡§§‡§ø (ST)</option>
                <option value="other">‡§Ö‡§®‡•ç‡§Ø</option>
              </select>
            </div>
          </div>

          {/* Aadhar & PAN */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <input
              type="text"
              name="aadharNumber"
              placeholder="‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§° ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ (12 ‡§Ö‡§Ç‡§ï)"
              value={formData.aadharNumber}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
              pattern="\d{12}"
              title="‡§ï‡•É‡§™‡§Ø‡§æ 12 ‡§Ö‡§Ç‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§Ü‡§ß‡§æ‡§∞ ‡§®‡§Ç‡§¨‡§∞ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç"
            />
            <input
              type="text"
              name="panCardNumber"
              placeholder="‡§™‡•à‡§® ‡§ï‡§æ‡§∞‡•ç‡§° ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ (10 ‡§Ö‡§ï‡•ç‡§∑‡§∞/‡§Ö‡§Ç‡§ï)"
              value={formData.panCardNumber}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
              pattern="[A-Z]{5}[0-9]{4}[A-Z]{1}"
              title="‡§â‡§¶‡§æ‡§π‡§∞‡§£: ABCDE1234F"
            />
          </div>

          {/* Head of Family & Auth */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <input
              type="text"
              name="headOfFamilyName"
              placeholder="‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§ï‡•á ‡§Æ‡•Å‡§ñ‡§ø‡§Ø‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ"
              value={formData.headOfFamilyName}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
            />
            <input
              type="email"
              name="email"
              placeholder="‡§à‡§Æ‡•á‡§≤"
              value={formData.email}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
              required
            />
            <input
              type="password"
              name="password"
              placeholder="‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§°"
              value={formData.password}
              onChange={handleChange}
              className="w-full px-4 py-2 border border-amber-600 rounded focus:outline-none focus:ring-2 focus:ring-amber-500"
              required
            />
          </div>

          <motion.button
            whileHover={{ scale: 1.03 }}
            whileTap={{ scale: 0.98 }}
            type="submit"
            className="w-full bg-amber-700 hover:bg-amber-800 text-white font-semibold py-3 rounded-lg mt-4 transition duration-200"
          >
            ‡§™‡§Ç‡§ú‡•Ä‡§ï‡§∞‡§£ ‡§ï‡§∞‡•á‡§Ç
          </motion.button>
        </form>
      </motion.div>
    </div>
    <Footer />
    </>
  );
}

export default UserRegister;