'use client';

import React, { useState, useEffect, useMemo } from 'react';

function Allfamily() {
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // Filters state
  const [filters, setFilters] = useState({
    name: '',
    fatherName: '',
    motherName: '',
    grandfatherName: '',
    grandmotherName: '',
    dob: '',
    dobTime: '',
    qualification: '',
    gender: '',
    phoneNumber: '',
    age: '',
    occupation: '',
    maritalStatus: '',
    marriageDate: '',
    dharam: '',
    jaati: '',
    hasVehicle: '',
    vehicleCount: '',
    aadharNumber: '',
    panCardNumber: '',
    headOfFamilyName: '',
    email: '',
    role: '',
    roomId: '',
    isEnabled: '',
    vehicleType: '',
    vehicleNumberPlate: '',
    vehiclePurchaseDate: '',
    vehicleInsuranceExpiry: '',
  });

  useEffect(() => {
    const fetchData = async () => {
      try {
        const res = await fetch('http://localhost:5000/api/v1/kalupra/getallusers');
        if (!res.ok) throw new Error('Failed to fetch data');
        const result = await res.json();

        // Ensure it's an array
        const users = Array.isArray(result) ? result : [];
        setData(users);
      } catch (err) {
        console.error("Error fetching family ", err);
        setError("рдбреЗрдЯрд╛ рд▓реЛрдб рдХрд░рдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐");
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  // Filtered data with search across all fields
  const filteredData = useMemo(() => {
    return data.filter(user => {
      // Check all user fields
      const matchesName = filters.name
        ? (user.name?.toLowerCase().includes(filters.name.toLowerCase()) || '')
        : true;

      const matchesFatherName = filters.fatherName
        ? (user.fatherName?.toLowerCase().includes(filters.fatherName.toLowerCase()) || '')
        : true;

      const matchesMotherName = filters.motherName
        ? (user.motherName?.toLowerCase().includes(filters.motherName.toLowerCase()) || '')
        : true;

      const matchesGrandfatherName = filters.grandfatherName
        ? (user.grandfatherName?.toLowerCase().includes(filters.grandfatherName.toLowerCase()) || '')
        : true;

      const matchesGrandmotherName = filters.grandmotherName
        ? (user.grandmotherName?.toLowerCase().includes(filters.grandmotherName.toLowerCase()) || '')
        : true;

      const matchesDob = filters.dob
        ? (user.dob?.toLowerCase().includes(filters.dob.toLowerCase()) || '')
        : true;

      const matchesDobTime = filters.dobTime
        ? (user.dobTime?.toLowerCase().includes(filters.dobTime.toLowerCase()) || '')
        : true;

      const matchesQualification = filters.qualification
        ? (user.qualification?.toLowerCase().includes(filters.qualification.toLowerCase()) || '')
        : true;

      const matchesGender = filters.gender
        ? user.gender === filters.gender
        : true;

      const matchesPhoneNumber = filters.phoneNumber
        ? (user.phoneNumber?.includes(filters.phoneNumber) || '')
        : true;

      const matchesAge = filters.age
        ? user.age?.toString().includes(filters.age)
        : true;

      const matchesOccupation = filters.occupation
        ? (user.occupation?.toLowerCase().includes(filters.occupation.toLowerCase()) || '')
        : true;

      const matchesMaritalStatus = filters.maritalStatus
        ? user.maritalStatus === filters.maritalStatus
        : true;

      const matchesMarriageDate = filters.marriageDate
        ? (user.marriageDate?.toLowerCase().includes(filters.marriageDate.toLowerCase()) || '')
        : true;

      const matchesDharam = filters.dharam
        ? (user.dharam?.toLowerCase().includes(filters.dharam.toLowerCase()) || '')
        : true;

      const matchesJaati = filters.jaati
        ? (user.jaati?.toLowerCase().includes(filters.jaati.toLowerCase()) || '')
        : true;

      const matchesHasVehicle = filters.hasVehicle
        ? user.hasVehicle?.toString() === filters.hasVehicle
        : true;

      const matchesVehicleCount = filters.vehicleCount
        ? user.vehicleCount?.toString().includes(filters.vehicleCount)
        : true;

      const matchesAadharNumber = filters.aadharNumber
        ? (user.aadharNumber?.includes(filters.aadharNumber) || '')
        : true;

      const matchesPanCardNumber = filters.panCardNumber
        ? (user.panCardNumber?.includes(filters.panCardNumber) || '')
        : true;

      const matchesHeadOfFamilyName = filters.headOfFamilyName
        ? (user.headOfFamilyName?.toLowerCase().includes(filters.headOfFamilyName.toLowerCase()) || '')
        : true;

      const matchesEmail = filters.email
        ? (user.email?.toLowerCase().includes(filters.email.toLowerCase()) || '')
        : true;

      const matchesRole = filters.role
        ? user.role === filters.role
        : true;

      const matchesRoomId = filters.roomId
        ? (user.roomId?.toLowerCase().includes(filters.roomId.toLowerCase()) || '')
        : true;

      const matchesIsEnabled = filters.isEnabled
        ? user.isEnabled?.toString() === filters.isEnabled
        : true;

      // Check vehicle fields
      let matchesVehicleFields = true;
      if (filters.vehicleType || filters.vehicleNumberPlate || filters.vehiclePurchaseDate || filters.vehicleInsuranceExpiry) {
        matchesVehicleFields = user.vehicles?.some(vehicle => {
          const matchesVType = filters.vehicleType
            ? (vehicle.type?.toLowerCase().includes(filters.vehicleType.toLowerCase()) || '')
            : true;

          const matchesVNumberPlate = filters.vehicleNumberPlate
            ? (vehicle.numberPlate?.includes(filters.vehicleNumberPlate) || '')
            : true;

          const matchesVPurchaseDate = filters.vehiclePurchaseDate
            ? (vehicle.purchaseDate?.toLowerCase().includes(filters.vehiclePurchaseDate.toLowerCase()) || '')
            : true;

          const matchesVInsuranceExpiry = filters.vehicleInsuranceExpiry
            ? (vehicle.insuranceExpiry?.toLowerCase().includes(filters.vehicleInsuranceExpiry.toLowerCase()) || '')
            : true;

          return matchesVType && matchesVNumberPlate && matchesVPurchaseDate && matchesVInsuranceExpiry;
        }) || false;
      }

      return matchesName && matchesFatherName && matchesMotherName && matchesGrandfatherName &&
        matchesGrandmotherName && matchesDob && matchesDobTime && matchesQualification &&
        matchesGender && matchesPhoneNumber && matchesAge && matchesOccupation &&
        matchesMaritalStatus && matchesMarriageDate && matchesDharam && matchesJaati &&
        matchesHasVehicle && matchesVehicleCount && matchesAadharNumber && matchesPanCardNumber &&
        matchesHeadOfFamilyName && matchesEmail && matchesRole && matchesRoomId &&
        matchesIsEnabled && matchesVehicleFields;
    });
  }, [filters, data]);

  const handleFilterChange = (field, value) => {
    setFilters(prev => ({ ...prev, [field]: value }));
  };

  const clearFilters = () => {
    setFilters({
      name: '',
      fatherName: '',
      motherName: '',
      grandfatherName: '',
      grandmotherName: '',
      dob: '',
      dobTime: '',
      qualification: '',
      gender: '',
      phoneNumber: '',
      age: '',
      occupation: '',
      maritalStatus: '',
      marriageDate: '',
      dharam: '',
      jaati: '',
      hasVehicle: '',
      vehicleCount: '',
      aadharNumber: '',
      panCardNumber: '',
      headOfFamilyName: '',
      email: '',
      role: '',
      roomId: '',
      isEnabled: '',
      vehicleType: '',
      vehicleNumberPlate: '',
      vehiclePurchaseDate: '',
      vehicleInsuranceExpiry: '',
    });
  };

  // Format vehicles for display
  // Format vehicles for display
  const formatVehicles = (vehicles) => {
    if (!vehicles || vehicles.length === 0) return 'тАФ';

    return vehicles.map((v, idx) => (
      <div key={idx} className="text-xs space-y-1">
        <div className="font-medium">рд╡рд╛рд╣рди {idx + 1}:</div>
        <div className="ml-4">
          <div>рдкреНрд░рдХрд╛рд░: {v.type || 'тАФ'}</div>
          <div>рдирдВрдмрд░ рдкреНрд▓реЗрдЯ: {v.numberPlate || 'тАФ'}</div>
          <div>рдЦрд░реАрдж рддрд┐рдерд┐: {v.purchaseDate || 'тАФ'}</div>
          <div>рдмреАрдорд╛ рд╕рдорд╛рдкреНрддрд┐: {v.insuranceExpiry || 'тАФ'}</div>
        </div>
      </div>
    ));
  };
  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-screen bg-amber-50">
        <div className="text-center">
          <div className="inline-block h-10 w-10 animate-spin rounded-full border-4 border-amber-600 border-t-transparent"></div>
          <p className="mt-3 text-amber-700">рдбреЗрдЯрд╛ рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ... ЁЯМ╛</p>
        </div>
      </div>
    );
  }

  return (
    <div className="p-4 md:p-6 max-w-7xl mx-auto bg-amber-50 min-h-screen">
      <h1 className="text-2xl md:text-3xl font-bold text-amber-800 mb-6 text-center">рд╕рднреА рдкрд░рд┐рд╡рд╛рд░ рд╕рджрд╕реНрдп</h1>

      {error && (
        <div className="bg-red-100 text-red-700 p-4 rounded-lg mb-6 text-center">
          {error}
        </div>
      )}

      {/* ЁЯФН Filters */}
      <div className="bg-white rounded-xl shadow-lg p-4 md:p-6 mb-6 border border-amber-200">
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 xl:grid-cols-6 gap-4 mb-4">
          <input
            type="text"
            placeholder="рдирд╛рдо"
            value={filters.name}
            onChange={(e) => handleFilterChange('name', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рдкрд┐рддрд╛ рдХрд╛ рдирд╛рдо"
            value={filters.fatherName}
            onChange={(e) => handleFilterChange('fatherName', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рдорд╛рддрд╛ рдХрд╛ рдирд╛рдо"
            value={filters.motherName}
            onChange={(e) => handleFilterChange('motherName', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рджрд╛рджрд╛ рдХрд╛ рдирд╛рдо"
            value={filters.grandfatherName}
            onChange={(e) => handleFilterChange('grandfatherName', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рджрд╛рджреА рдХрд╛ рдирд╛рдо"
            value={filters.grandmotherName}
            onChange={(e) => handleFilterChange('grandmotherName', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рдЬрдиреНрдо рддрд┐рдерд┐"
            value={filters.dob}
            onChange={(e) => handleFilterChange('dob', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рдЬрдиреНрдо рд╕рдордп"
            value={filters.dobTime}
            onChange={(e) => handleFilterChange('dobTime', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рдпреЛрдЧреНрдпрддрд╛"
            value={filters.qualification}
            onChange={(e) => handleFilterChange('qualification', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <select
            value={filters.gender}
            onChange={(e) => handleFilterChange('gender', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 text-amber-900 text-sm"
          >
            <option value="">рд╕рднреА рд▓рд┐рдВрдЧ</option>
            <option value="male">рдкреБрд░реБрд╖</option>
            <option value="female">рдорд╣рд┐рд▓рд╛</option>
            <option value="other">рдЕрдиреНрдп</option>
          </select>
          <input
            type="text"
            placeholder="рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░"
            value={filters.phoneNumber}
            onChange={(e) => handleFilterChange('phoneNumber', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рдЖрдпреБ"
            value={filters.age}
            onChange={(e) => handleFilterChange('age', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рд╡реНрдпрд╡рд╕рд╛рдп"
            value={filters.occupation}
            onChange={(e) => handleFilterChange('occupation', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <select
            value={filters.maritalStatus}
            onChange={(e) => handleFilterChange('maritalStatus', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 text-amber-900 text-sm"
          >
            <option value="">рд╕рднреА рд╡реИрд╡рд╛рд╣рд┐рдХ рд╕реНрдерд┐рддрд┐</option>
            <option value="single">рдЕрд╡рд┐рд╡рд╛рд╣рд┐рдд</option>
            <option value="married">рд╡рд┐рд╡рд╛рд╣рд┐рдд</option>
            <option value="divorced">рддрд▓рд╛рдХрд╢реБрджрд╛</option>
            <option value="widowed">рд╡рд┐рдзрд╡рд╛/рд╡рд┐рдзреБрд░</option>
          </select>
          <input
            type="text"
            placeholder="рд╡рд┐рд╡рд╛рд╣ рддрд┐рдерд┐"
            value={filters.marriageDate}
            onChange={(e) => handleFilterChange('marriageDate', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рдзрд░реНрдо"
            value={filters.dharam}
            onChange={(e) => handleFilterChange('dharam', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рдЬрд╛рддрд┐"
            value={filters.jaati}
            onChange={(e) => handleFilterChange('jaati', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <select
            value={filters.hasVehicle}
            onChange={(e) => handleFilterChange('hasVehicle', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 text-amber-900 text-sm"
          >
            <option value="">рд╡рд╛рд╣рди рд╕реНрдерд┐рддрд┐</option>
            <option value="true">рд╣рд╛рдБ</option>
            <option value="false">рдирд╣реАрдВ</option>
          </select>
          <input
            type="text"
            placeholder="рд╡рд╛рд╣рди рд╕рдВрдЦреНрдпрд╛"
            value={filters.vehicleCount}
            onChange={(e) => handleFilterChange('vehicleCount', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рдЖрдзрд╛рд░ рдирдВрдмрд░"
            value={filters.aadharNumber}
            onChange={(e) => handleFilterChange('aadharNumber', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рдкреИрди рдХрд╛рд░реНрдб рдирдВрдмрд░"
            value={filters.panCardNumber}
            onChange={(e) => handleFilterChange('panCardNumber', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рдкрд░рд┐рд╡рд╛рд░ рдкреНрд░рдореБрдЦ"
            value={filters.headOfFamilyName}
            onChange={(e) => handleFilterChange('headOfFamilyName', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рдИрдореЗрд▓"
            value={filters.email}
            onChange={(e) => handleFilterChange('email', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <select
            value={filters.role}
            onChange={(e) => handleFilterChange('role', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 text-amber-900 text-sm"
          >
            <option value="">рд╕рднреА рднреВрдорд┐рдХрд╛рдПрдБ</option>
            <option value="admin">рдПрдбрдорд┐рди</option>
            <option value="headOFFamily">рдкрд░рд┐рд╡рд╛рд░ рдкреНрд░рдореБрдЦ</option>
            <option value="member">рд╕рджрд╕реНрдп</option>
          </select>
          <input
            type="text"
            placeholder="рдЧрд╛рдБрд╡ (Room ID)"
            value={filters.roomId}
            onChange={(e) => handleFilterChange('roomId', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <select
            value={filters.isEnabled}
            onChange={(e) => handleFilterChange('isEnabled', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 text-amber-900 text-sm"
          >
            <option value="">рд╕рдХреНрд░рд┐рдп рд╕реНрдерд┐рддрд┐</option>
            <option value="true">рд╕рдХреНрд░рд┐рдп</option>
            <option value="false">рдирд┐рд╖реНрдХреНрд░рд┐рдп</option>
          </select>
          <input
            type="text"
            placeholder="рд╡рд╛рд╣рди рдкреНрд░рдХрд╛рд░"
            value={filters.vehicleType}
            onChange={(e) => handleFilterChange('vehicleType', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рд╡рд╛рд╣рди рдирдВрдмрд░ рдкреНрд▓реЗрдЯ"
            value={filters.vehicleNumberPlate}
            onChange={(e) => handleFilterChange('vehicleNumberPlate', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рд╡рд╛рд╣рди рдЦрд░реАрдж рддрд┐рдерд┐"
            value={filters.vehiclePurchaseDate}
            onChange={(e) => handleFilterChange('vehiclePurchaseDate', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
          <input
            type="text"
            placeholder="рд╡рд╛рд╣рди рдмреАрдорд╛ рд╕рдорд╛рдкреНрддрд┐"
            value={filters.vehicleInsuranceExpiry}
            onChange={(e) => handleFilterChange('vehicleInsuranceExpiry', e.target.value)}
            className="px-3 py-2 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 placeholder-amber-400 text-amber-900 text-sm"
          />
        </div>
        <div className="flex justify-end">
          <button
            onClick={clearFilters}
            className="px-4 py-2 bg-amber-600 text-white rounded-lg hover:bg-amber-700 transition text-sm"
          >
            рдлрд╝рд┐рд▓реНрдЯрд░ рд╕рд╛рдлрд╝ рдХрд░реЗрдВ
          </button>
        </div>
      </div>

      {/* ЁЯУЛ Table */}
      {filteredData.length === 0 ? (
        <div className="text-center py-10 bg-white rounded-lg shadow text-amber-700">
          рдХреЛрдИ рдбреЗрдЯрд╛ рдирд╣реАрдВ рдорд┐рд▓рд╛ред
        </div>
      ) : (
        <div className="overflow-x-auto bg-white rounded-lg shadow border border-amber-200">
          <table className="min-w-full divide-y divide-amber-100">
            <thead className="bg-amber-100">
              <tr>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдХреНрд░рдорд╛рдВрдХ</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдирд╛рдо</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдкрд┐рддрд╛</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдорд╛рддрд╛</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рджрд╛рджрд╛</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рджрд╛рджреА</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдЬрдиреНрдо рддрд┐рдерд┐</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдЬрдиреНрдо рд╕рдордп</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдпреЛрдЧреНрдпрддрд╛</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рд▓рд┐рдВрдЧ</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдореЛрдмрд╛рдЗрд▓</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдЖрдпреБ</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рд╡реНрдпрд╡рд╕рд╛рдп</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рд╡реИрд╡рд╛рд╣рд┐рдХ рд╕реНрдерд┐рддрд┐</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рд╡рд┐рд╡рд╛рд╣ рддрд┐рдерд┐</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдзрд░реНрдо</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдЬрд╛рддрд┐</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рд╡рд╛рд╣рди</th>
                {/* <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рд╡рд╛рд╣рди рд╕рдВрдЦреНрдпрд╛</th> */}
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдЖрдзрд╛рд░</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдкреИрди рдХрд╛рд░реНрдб</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдкрд░рд┐рд╡рд╛рд░ рдкреНрд░рдореБрдЦ</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдИрдореЗрд▓</th>
                <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рднреВрдорд┐рдХрд╛</th>
                {/* <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рдЧрд╛рдБрд╡</th> */}
                {/* <th className="px-3 py-2 text-left text-xs font-medium text-amber-800 uppercase tracking-wider whitespace-nowrap">рд╕рдХреНрд░рд┐рдп</th> */}
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-amber-100">
              {filteredData.map((user, index) => (
                <tr key={user._id || index} className="hover:bg-amber-50">
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{index + 1}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.name || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.fatherName || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.motherName || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.grandfatherName || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.grandmotherName || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.dob || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.dobTime || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.qualification || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">
                    {user.gender === 'male' ? 'рдкреБрд░реБрд╖' : user.gender === 'female' ? 'рдорд╣рд┐рд▓рд╛' : 'рдЕрдиреНрдп'}
                  </td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.phoneNumber || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.age || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.occupation || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">
                    {user.maritalStatus === 'married' ? 'рд╡рд┐рд╡рд╛рд╣рд┐рдд' :
                      user.maritalStatus === 'single' ? 'рдЕрд╡рд┐рд╡рд╛рд╣рд┐рдд' :
                        user.maritalStatus === 'divorced' ? 'рддрд▓рд╛рдХрд╢реБрджрд╛' : 'рд╡рд┐рдзрд╡рд╛/рд╡рд┐рдзреБрд░'}
                  </td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.marriageDate || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.dharam || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.jaati || 'тАФ'}</td>
                  <td className="px-3 py-2 text-xs text-gray-700 w-64 min-w-[16rem]">
                    <div className="space-y-1">{formatVehicles(user.vehicles)}</div>
                  </td>
                  {/* <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.vehicleCount || 'тАФ'}</td> */}
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.aadharNumber || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.panCardNumber || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.headOfFamilyName || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.email || 'тАФ'}</td>
                  <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">
                    {user.role === 'admin' ? 'рдПрдбрдорд┐рди' : user.role === 'headOFFamily' ? 'рдкреНрд░рдореБрдЦ' : 'рд╕рджрд╕реНрдп'}
                  </td>
                  {/* <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">{user.roomId || 'kalupra'}</td> */}
                  {/* <td className="px-3 py-2 whitespace-nowrap text-xs text-gray-700">
                    {user.isEnabled === true ? 'рд╣рд╛рдБ' : user.isEnabled === false ? 'рдирд╣реАрдВ' : 'тАФ'}
                  </td> */}
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  );
}

export default Allfamily;